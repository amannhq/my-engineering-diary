name: Daily Validation

on:
  push:
    paths:
      - 'daily-logs/**'
  workflow_dispatch:

jobs:
  validate-daily-logs:
    runs-on: ubuntu-latest
    env:
      PYTHONDONTWRITEBYTECODE: '1'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai jsonschema

      - name: Validate goals file
        run: python -m ci.scripts.validate_goals

      - name: Determine changed daily logs
        id: logs
        run: |
          set -eo pipefail
          BASE="${{ github.event.before }}"
          if [ -z "$BASE" ]; then
            BASE="HEAD^"
          fi
          git fetch --no-tags --depth=2 origin "$BASE" || true
          CHANGED=$(git diff --name-only "$BASE" "$GITHUB_SHA" -- 'daily-logs/**/*.md' || true)
          CHANGED=$(echo "$CHANGED" | tr '\n' ' ' | xargs -n1 | sort -u | tr '\n' ' ')
          echo "logs=$CHANGED" >> "$GITHUB_OUTPUT"

      - name: Run daily validation
        if: steps.logs.outputs.logs != ''
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_ORG: ${{ secrets.OPENAI_ORG }}
          LOG_LIST: ${{ steps.logs.outputs.logs }}
        run: |
          set -e
          python - <<'PY'
import os
import datetime
from pathlib import Path
from ci.workflows.daily_validation import process_log

logs = [Path(p) for p in os.environ["LOG_LIST"].split()]  # from workflow step
for log_path in logs:
    date_str = log_path.stem.split('.')[0]
    try:
        iso_date = datetime.date.fromisoformat(date_str)
    except ValueError:
        print(f"::warning::Skipping {log_path} - filename missing ISO date prefix")
        continue
    iso_week = iso_date.isocalendar()
    artifact_dir = Path("ci/daily-reports") / f"{iso_week[0]}-W{iso_week[1]:02d}-{iso_date.day:02d}"
    artifact_dir.mkdir(parents=True, exist_ok=True)

    result = process_log(
        log_path=log_path,
        metadata={
            "summary": f"Automated analysis for {log_path.name}",
            "model": os.getenv("RESPONSES_MODEL", "gpt-4.1"),
            "artifact_dir": str(artifact_dir),
            "run_id": f"daily-{log_path.stem}",
        },
    )

    summary_path = artifact_dir / "summary.md"
    summary_path.write_text(
        f"# Daily Analysis\n\n- Log: {log_path}\n- Request ID: {result['result'].get('request_id')}\n- Steps: {', '.join(result['result'].get('steps', []))}\n",
        encoding="utf-8",
    )

print("Daily validation completed")
PY

      - name: No daily logs changed notice
        if: steps.logs.outputs.logs == ''
        run: echo "No daily logs modified in this push."

      - name: Upload daily validation artifacts
        if: steps.logs.outputs.logs != ''
        uses: actions/upload-artifact@v4
        with:
          name: daily-validation-${{ github.run_id }}
          path: |
            ci/daily-reports/**
          retention-days: 14
